{"version":3,"sources":["components/Toolbar.js","components/Image.js","components/mark/BoldMark.js","components/mark/ItalicMark.js","components/mark/UnderlineMark.js","components/mark/CodeMark.js","schema.js","lib/file.js","lib/text.js","components/TextEditor.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","props","react_default","a","createElement","className","children","Image","styled","_templateObject","selected","BoldMark","ItalicMark","property","schema","document","last","type","normalize","editor","_ref","code","node","child","paragraph","Block","create","insertNodeByKey","key","nodes","size","blocks","image","isVoid","file","insertImage","src","target","select","console","log","insertBlock","data","moveFocusToEndOfDocument","insertDocument","name","insertFile","reader","FileReader","includes","addEventListener","command","result","readAsDataURL","alert","downloadFile","link","download","href","toString","body","appendChild","click","removeChild","hasBlock","value","some","isBlockListItemType","isParentBlockNumberedListType","block","getClosest","parent","isParentBlockBulletedListType","onTabPressed","isLevelThree","forEach","wrapBlock","isLevelOne","onShiftTabPressed","setBlocks","unwrapBlock","onEnterPressed","valueAsObject","JSON","parse","stringify","toJSON","leaves","text","formatOnClick","isActive","isList","isType","isTab","isKeyHotkey","isShiftTab","isEnter","existingValue","localStorage","getItem","initialValue","Value","fromJSON","object","MarkHotkey","options","onKeyDown","event","next","ctrlKey","preventDefault","toggleMark","plugins","TextEditor","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDocumentFileClick","confirmAlert","title","message","buttons","label","onClick","onChangeInputOfTopLevelBlockLimit","setState","topLevelBlockLimit","onSaveClick","Storage","content","length","setItem","save","state","onCancelClick","onMarkClick","change","onChange","onBlockClick","assertThisInitialized","onImageClick","window","prompt","onOpenImage","inputImageFile","current","onOpenFile","inputFile","onFileSelect","files","ref","renderMark","mark","mark_BoldMark","mark_ItalicMark","UnderlineMark","CodeMark","renderNode","attributes","isFocused","imageSrc","get","components_Image","alt","documentSrc","react_icons_kit_default","icon","React","createRef","_this2","contentObject","react","components_Toolbar","disabled","onPointerDown","bold","italic","underline","ic_looks_one","ic_looks_two","listOl","listUl","fileImageO","style","display","accept","slate_react_es","spellCheck","autoFocus","tabIndex","placeholder","focus","Component","App","TextEditor_TextEditor","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4984497.chunk.js","sourcesContent":["import React from 'react';\n\nconst Toolbar = props => (\n    <div className=\"toolbar\">{props.children}</div>\n);\n\nexport default Toolbar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled('img')`\n  display: block;\n  max-width: 100%;\n  max-height: 20em;\n  box-shadow: ${props => (props.selected ? '0 0 0 2px blue;' : 'none')};\n`;\n\nexport default Image;\n","import React from 'react';\n\nconst BoldMark = props => (\n    <strong>\n        {props.children}\n    </strong>\n);\n\nexport default BoldMark;\n","import React from 'react'\n\nconst ItalicMark = props => (\n    <em property=\"italic\">\n        {props.children}\n    </em>\n);\n\nexport default ItalicMark;\n","import React from 'react'\n\nconst ItalicMark = props => (\n    <u property=\"underline\">\n        {props.children}\n    </u>\n);\n\nexport default ItalicMark;\n","import React from 'react'\n\nconst ItalicMark = props => (\n    <code property=\"code\">\n        {props.children}\n    </code>\n);\n\nexport default ItalicMark;\n","import {Block} from \"slate\";\n\nconst schema = {\n    document: {\n        last: {type: 'paragraph'},\n        normalize: (editor, {code, node, child}) => {\n            if (code === 'last_child_type_invalid') {\n                const paragraph = Block.create('paragraph');\n                return editor.insertNodeByKey(node.key, node.nodes.size, paragraph)\n            }\n        },\n    },\n    blocks: {\n        image: {\n            isVoid: true\n        },\n        file: {\n            isVoid: true\n        },\n    },\n};\n\nexport default schema;\n","export const insertImage = (editor, src, target) => {\n    if (target) {\n        editor.select(target);\n        console.log('Target selected');\n    }\n\n    editor.insertBlock({\n        type: 'image',\n        data: {src},\n    }).moveFocusToEndOfDocument();\n};\n\nexport const insertDocument = (editor, src, name, target) => {\n    if (target) {\n        editor.select(target);\n        console.log('Target selected');\n    }\n\n    editor.insertBlock({\n        type: 'file',\n        data: {src, name},\n    }).moveFocusToEndOfDocument();\n};\n\nexport const insertFile = (file, editor) => {\n    const validImageTypes = ['image/gif', 'image/jpeg', 'image/jpg', 'image/png'];\n    const validDocumentTypes = ['text/plain', 'application/pdf'];\n\n    const reader = new FileReader();\n    if (validImageTypes.includes(file.type)) {\n        console.log('This is image type file.');\n\n        reader.addEventListener('load', () => {\n            editor.command(insertImage, reader.result)\n        });\n\n        reader.readAsDataURL(file)\n    } else if (validDocumentTypes.includes(file.type)) {\n        console.log('This is document type file.');\n\n        reader.addEventListener('load', () => {\n            editor.command(insertDocument, reader.result, file.name)\n        });\n\n        reader.readAsDataURL(file)\n    } else {\n        alert('Invalid file type.')\n    }\n};\n\nexport const downloadFile = (name, src) => {\n    console.log('Download started...');\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = src.toString();\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\n","const DEFAULT_NODE = 'paragraph';\n\nconst hasBlock = (value, type) => {\n    return value.blocks.some(node => node.type === type)\n};\n\nconst isBlockListItemType = (value) => {\n    return hasBlock(value, 'list-item');\n};\n\nconst isParentBlockNumberedListType = (value) => {\n    const {document} = value;\n    return value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === 'numbered-list')\n    });\n};\n\nconst isParentBlockBulletedListType = (value) => {\n    const {document} = value;\n    return value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === 'bulleted-list')\n    });\n};\n\nexport const onTabPressed = (editor) => {\n    const {value} = editor;\n\n    let isLevelThree = false;\n    value.document.nodes.forEach(block => {\n        console.log('Blocks: ');\n        console.log(block['type']);\n        console.log(block['key']);\n\n        if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n            block.nodes.forEach(block => {\n                console.log('Level 1 Blocks: ');\n                console.log(block['type']);\n                console.log(block['key']);\n\n                isLevelThree = false;\n\n                if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n                    block.nodes.forEach(block => {\n                        console.log('Level 2 Blocks: ');\n                        console.log(block['type']);\n                        console.log(block['key']);\n\n                        isLevelThree = false;\n\n                        if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n                            console.log('Level 3 Blocks: ');\n                            console.log(block['type']);\n                            console.log(block['key']);\n\n                            isLevelThree = true;\n                        }\n                    });\n                }\n            });\n        }\n    });\n\n    if (isBlockListItemType(value) && isParentBlockNumberedListType(value) && !isLevelThree) {\n        editor.wrapBlock('numbered-list');\n    } else if (isBlockListItemType(value) && isParentBlockBulletedListType(value) && !isLevelThree) {\n        editor.wrapBlock('bulleted-list');\n    }\n};\n\nconst isLevelOne = (value) => {\n    let isLevelOne = false;\n\n    value.document.nodes.forEach(block => {\n        console.log('Blocks: ');\n        console.log(block['type']);\n        console.log(block['key']);\n\n        if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n            block.nodes.forEach(block => {\n                console.log('Level 1 Blocks: ');\n                console.log(block['type']);\n                console.log(block['key']);\n\n                isLevelOne = true;\n\n                if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n                    block.nodes.forEach(block => {\n                        console.log('Level 2 Blocks: ');\n                        console.log(block['type']);\n                        console.log(block['key']);\n\n                        isLevelOne = false;\n\n                        if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n                            console.log('Level 3 Blocks: ');\n                            console.log(block['type']);\n                            console.log(block['key']);\n\n                            isLevelOne = false;\n                        }\n                    });\n                }\n            });\n        }\n    });\n\n    return isLevelOne;\n};\n\nexport const onShiftTabPressed = (editor) => {\n    const {value} = editor;\n\n    if (isBlockListItemType(value) && isParentBlockNumberedListType(value)) {\n        if (isLevelOne(value)) {\n            editor.setBlocks(DEFAULT_NODE).unwrapBlock('list-item').unwrapBlock('numbered-list')\n        } else {\n            editor.unwrapBlock('list-item').unwrapBlock('numbered-list')\n        }\n    } else if (isBlockListItemType(value) && isParentBlockBulletedListType(value)) {\n        if (isLevelOne(value)) {\n            editor.setBlocks(DEFAULT_NODE).unwrapBlock('list-item').unwrapBlock('bulleted-list')\n        } else {\n            editor.unwrapBlock('list-item').unwrapBlock('bulleted-list')\n        }\n    }\n};\n\nexport const onEnterPressed = (editor) => {\n    const {value} = editor;\n\n    if (isBlockListItemType(value) && (isParentBlockNumberedListType(value) || isParentBlockBulletedListType(value))) {\n        const valueAsObject = JSON.parse(JSON.stringify(value.blocks.toJSON()));\n        console.log(JSON.stringify(valueAsObject[0].nodes[0].leaves[0].text));\n\n        if (valueAsObject[0].nodes[0].leaves[0].text === '') {\n            if (isBlockListItemType(value) && isParentBlockNumberedListType(value)) {\n                if (isLevelOne(value)) {\n                    editor.setBlocks(DEFAULT_NODE).unwrapBlock('list-item').unwrapBlock('numbered-list')\n                }\n            } else if (isBlockListItemType(value) && isParentBlockBulletedListType(value)) {\n                if (isLevelOne(value)) {\n                    editor.setBlocks(DEFAULT_NODE).unwrapBlock('list-item').unwrapBlock('bulleted-list')\n                }\n            }\n        }\n    }\n};\n\nexport const formatOnClick = (editor, type) => {\n    const {value} = editor;\n    const {document} = value;\n\n    // Handle everything but list buttons.\n    if (type !== 'bulleted-list' && type !== 'numbered-list') {\n        const isActive = hasBlock(value, type);\n        const isList = hasBlock(value, 'list-item');\n\n        if (isList) {\n            editor\n                .setBlocks(isActive ? DEFAULT_NODE : type)\n                .unwrapBlock('bulleted-list')\n                .unwrapBlock('numbered-list')\n        } else {\n            editor.setBlocks(isActive ? DEFAULT_NODE : type)\n        }\n    } else {\n        // Handle the extra wrapping required for list buttons.\n        const isList = hasBlock(value, 'list-item');\n        const isType = value.blocks.some(block => {\n            return !!document.getClosest(block.key, parent => parent.type === type)\n        });\n\n        if (isList && isType) {\n            editor\n                .setBlocks(DEFAULT_NODE)\n                .unwrapBlock('bulleted-list')\n                .unwrapBlock('numbered-list')\n        } else if (isList) {\n            editor\n                .unwrapBlock(\n                    type === 'bulleted-list' ? 'numbered-list' : 'bulleted-list'\n                )\n                .wrapBlock(type)\n        } else {\n            editor.setBlocks('list-item').wrapBlock(type)\n        }\n    }\n};\n","import React, {Component, Fragment} from 'react'\nimport {Value} from 'slate'\nimport {Editor} from 'slate-react'\nimport {isKeyHotkey} from 'is-hotkey'\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport 'react-bootstrap/dist/react-bootstrap';\n\nimport Toolbar from './Toolbar'\nimport Icon from 'react-icons-kit'\nimport {bold} from 'react-icons-kit/feather/bold'\nimport {italic} from 'react-icons-kit/feather/italic'\nimport {underline} from 'react-icons-kit/feather/underline'\nimport {code} from 'react-icons-kit/feather/code'\nimport {ic_looks_one} from 'react-icons-kit/md/ic_looks_one'\nimport {ic_looks_two} from 'react-icons-kit/md/ic_looks_two'\nimport {quote} from 'react-icons-kit/metrize/quote'\nimport {listOl} from 'react-icons-kit/fa/listOl'\nimport {listUl} from 'react-icons-kit/fa/listUl'\nimport {image} from 'react-icons-kit/fa/image'\nimport {fileImageO} from 'react-icons-kit/fa/fileImageO'\nimport {file} from 'react-icons-kit/fa/file'\nimport Image from './Image'\n\nimport {BoldMark, CodeMark, ItalicMark, UnderlineMark} from './index'\n\nimport schema from \"../schema\"\nimport {downloadFile, insertFile, insertImage} from \"../lib/file\";\nimport {formatOnClick, onEnterPressed, onShiftTabPressed, onTabPressed} from \"../lib/text\";\n\nconst isTab = isKeyHotkey('tab');\nconst isShiftTab = isKeyHotkey('shift+tab');\nconst isEnter = isKeyHotkey('return');\n\n// Update the initial content to be pulled from Local Storage if it exists.\nconst existingValue = JSON.parse(localStorage.getItem('content'));\n// Create our initial value...\nconst initialValue = Value.fromJSON(\n    existingValue || {\n        \"document\": {\n            \"nodes\": [\n                {\n                    \"object\": \"block\",\n                    \"type\": \"paragraph\",\n                    \"nodes\": [\n                        {\n                            \"object\": \"text\",\n                            \"leaves\": [\n                                {\n                                    \"text\":\n                                        \"\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n            ]\n        }\n    }\n);\n\nfunction MarkHotkey(options) {\n    // Grab our options from the ones passed in.\n    const {type, key} = options;\n\n    // Return our \"plugin\" object, containing the `onKeyDown` handler.\n    return {\n        onKeyDown(event, editor, next) {\n            // If it doesn't match our `key`, let other plugins handle it.\n            if (!event.ctrlKey || event.key !== key) return next();\n\n            // Prevent the default characters from being inserted.\n            event.preventDefault();\n\n            // Toggle the mark `type`.\n            editor.toggleMark(type)\n        },\n    }\n}\n\n// Initialize a plugin for each mark...\nconst plugins = [\n    MarkHotkey({key: 'b', type: 'bold'}),\n    MarkHotkey({key: 'i', type: 'italic'}),\n    MarkHotkey({key: 'u', type: 'underline'}),\n    MarkHotkey({key: '`', type: 'code'}),\n];\n\nfunction save(value, topLevelBlockLimit) {\n    if (typeof (Storage) !== \"undefined\") {\n        // Save the value to Local Storage.\n        const content = JSON.stringify(value.toJSON());\n        console.log('Content ', content);\n\n        const contentObject = JSON.parse(content);\n\n        if (contentObject.document.nodes.length > topLevelBlockLimit && topLevelBlockLimit != '0') {\n            alert('Can not save due crossed the limit of blocks \\nYou set the limit is ' + topLevelBlockLimit);\n            return;\n        }\n\n        localStorage.setItem('content', content)\n    } else {\n        console.log('Sorry, your browser does not support Web Storage...')\n    }\n}\n\nexport default class TextEditor extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: initialValue,\n            topLevelBlockLimit: 0,\n        };\n\n        this.inputImageFile = React.createRef();\n        this.inputFile = React.createRef();\n    }\n\n    onDocumentFileClick = (event, name, src) => {\n        event.preventDefault();\n\n        confirmAlert({\n            title: 'Are you sure?',\n            message: 'Want to download ' + name,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        downloadFile(name, src)\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    };\n\n    onChangeInputOfTopLevelBlockLimit = event => {\n        this.setState({\n            topLevelBlockLimit: event.target.value\n        });\n    };\n\n    onSaveClick = (event) => {\n        event.preventDefault();\n\n        save(this.state.value, this.state.topLevelBlockLimit);\n    };\n\n    onCancelClick = (event) => {\n        event.preventDefault();\n\n        this.setState({value: initialValue})\n    };\n\n    onMarkClick = (event, type) => {\n        event.preventDefault();\n\n        const change = this.editor.toggleMark(type);\n\n        this.onChange(change);\n    };\n\n    onBlockClick = (event, type) => {\n        event.preventDefault();\n\n        const {editor} = this;\n\n        formatOnClick(editor, type)\n    };\n\n    onImageClick = event => {\n        event.preventDefault();\n\n        const src = window.prompt('Enter the URL of the image:');\n\n        if (!src) return;\n\n        this.editor.command(insertImage, src);\n    };\n\n    onOpenImage = event => {\n        event.preventDefault();\n\n        this.inputImageFile.current.click();\n    };\n    onOpenFile = event => {\n        event.preventDefault();\n\n        this.inputFile.current.click();\n    };\n\n    onFileSelect = event => {\n        event.preventDefault();\n\n        const file = event.target.files[0];\n\n        insertFile(file, this.editor);\n    };\n\n    ref = editor => {\n        this.editor = editor;\n    };\n\n    // On change, update the app's React state with the new editor value.\n    onChange = ({value}) => {\n        console.log('onChange value: ', JSON.stringify(value.toJSON()));\n        console.log('onChange current cursor on: ', JSON.stringify(value.blocks.toJSON()));\n\n        this.setState({value});\n    };\n\n    onKeyDown = (event, editor, next) => {\n        if (isTab(event)) {\n            onTabPressed(editor);\n\n            event.preventDefault();\n        } else if (isShiftTab(event)) {\n            onShiftTabPressed(editor);\n\n            event.preventDefault();\n        } else if (isEnter(event)) {\n            onEnterPressed(editor);\n\n            event.preventDefault();\n        }\n\n        return next();\n    };\n\n    renderMark = (props, editor, next) => {\n        switch (props.mark.type) {\n            case 'bold':\n                return <BoldMark {...props} />;\n\n            case 'italic':\n                return <ItalicMark {...props} />;\n\n            case 'underline':\n                return <UnderlineMark {...props} />;\n\n            case 'code':\n                return <CodeMark {...props} />;\n\n            default: {\n                return next();\n            }\n        }\n    };\n\n    renderNode = (props, editor, next) => {\n        const {attributes, children, node, isFocused} = props;\n\n        switch (node.type) {\n            case 'heading-one':\n                return <h1 {...attributes}>{children}</h1>;\n            case 'heading-two':\n                return <h2 {...attributes}>{children}</h2>;\n            case 'block-quote':\n                return <blockquote {...attributes}>{children}</blockquote>;\n            case 'list-item':\n                return <li {...attributes}>{children}</li>;\n            case 'numbered-list':\n                return <ol {...attributes}>{children}</ol>;\n            case 'bulleted-list':\n                return <ul {...attributes}>{children}</ul>;\n            case 'image':\n                const imageSrc = node.data.get('src');\n                return <Image src={imageSrc} selected={isFocused} alt=\"\"\n                              className=\"image-node\"/>;\n            case 'file':\n                const documentSrc = node.data.get('src');\n                const name = node.data.get('name');\n                return <a download={name} href={documentSrc}>\n                        <span onClick={(event) => this.onDocumentFileClick(event, name, documentSrc)}>\n                            <Icon icon={file}/> {name}\n                        </span>\n                </a>;\n            default:\n                return next();\n        }\n    };\n\n    render() {\n        const content = JSON.stringify(this.state.value.toJSON());\n        const contentObject = JSON.parse(content);\n        return (\n            <Fragment>\n                <Toolbar>\n                    <span>Enter the limit of blocks </span>\n                    <input name={\"topLevelBlockLimit\"}\n                           type={\"number\"}\n                           value={this.state.topLevelBlockLimit === 0 ? 0 : this.state.topLevelBlockLimit}\n                           onChange={this.onChangeInputOfTopLevelBlockLimit}/>\n                </Toolbar>\n                <Toolbar>\n                    <button className=\"button\"\n                            disabled={contentObject.document.nodes.length > this.state.topLevelBlockLimit && this.state.topLevelBlockLimit != 0}\n                            onPointerDown={(event) => this.onSaveClick(event)}>\n                        Save\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onCancelClick(event)}>\n                        Cancel\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onMarkClick(event, 'bold')}>\n                        <Icon icon={bold}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onMarkClick(event, 'italic')}>\n                        <Icon icon={italic}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onMarkClick(event, 'underline')}>\n                        <Icon icon={underline}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onMarkClick(event, 'code')}>\n                        <Icon icon={code}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onBlockClick(event, 'heading-one')}>\n                        <Icon icon={ic_looks_one}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onBlockClick(event, 'heading-two')}>\n                        <Icon icon={ic_looks_two}/>\n                    </button>\n                    {/*<button className=\"button\" onPointerDown={(event) => this.onBlockClick(event, 'block-quote')}>*/}\n                        {/*<Icon icon={quote}/>*/}\n                    {/*</button>*/}\n                    <button className=\"button\" onPointerDown={(event) => this.onBlockClick(event, 'numbered-list')}>\n                        <Icon icon={listOl}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onBlockClick(event, 'bulleted-list')}>\n                        <Icon icon={listUl}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onImageClick(event)}>\n                        <Icon icon={image}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onOpenImage(event)}>\n                        <Icon icon={fileImageO}/>\n                    </button>\n                    <button className=\"button\" onPointerDown={(event) => this.onOpenFile(event)}>\n                        <Icon icon={file}/>\n                    </button>\n                </Toolbar>\n                <div>\n                    <input\n                        ref={this.inputImageFile}\n                        type=\"file\"\n                        style={{display: 'none'}}\n                        onChange={this.onFileSelect}\n                        accept=\"image/*\"\n                    />\n                    <input\n                        ref={this.inputFile}\n                        type=\"file\"\n                        style={{display: 'none'}}\n                        onChange={this.onFileSelect}\n                        accept=\"application/pdf,text/plain\"\n                    />\n                </div>\n                <Editor\n                    spellCheck\n                    autoFocus\n                    tabIndex={-1}\n                    placeholder={'Enter text here...'}\n                    plugins={plugins}\n                    schema={schema}\n                    value={this.state.value}\n                    ref={this.ref}\n                    onChange={this.onChange}\n                    onKeyDown={this.onKeyDown}\n                    renderMark={this.renderMark}\n                    renderNode={this.renderNode}\n                />\n            </Fragment>\n        )\n    }\n\n    componentDidMount() {\n        this.editor.focus();\n    }\n}\n","import React, { Component } from 'react';\nimport TextEditor from './components/TextEditor';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}